--- MatchScripts.lua.orig	2018-11-23 21:58:40.000000000 -0800
+++ MatchScripts.lua	2020-08-20 19:13:40.000000000 -0700
@@ -15,6 +15,7 @@
 Import "MatchAI"
 Import "MatchCamera"
 Import "StarPickScripts"
+Import "RiteClubScripts"
 
 --[[ * PACKAGES * ]]
 
@@ -588,6 +589,29 @@
 	wait(1.9)
 
 	matchStarted = true
+	RiteClubReportItem({Key="START"})
+	RiteClubReportItem({Key="RITECOMMENCED"})
+	RiteClubReportItem({Key="STAGE", Value=RiteClub.Rite.Stage})
+
+	for i, team in ipairs({TeamA, TeamB}) do
+		--[[The "team" table always has all of the team's members,so it's up to
+		us to figure out which ones actualy participated in the current Rite.]]
+		for _, exile in pairs(team.TeamBench) do
+			if exile.ActiveStatus == "Assigned" then
+				local n = exile.DraftOrder
+				RiteClubReportItem({Key="TEAM"..tostring(i).."EXILE"..tostring(n), Value=exile.CharacterIndex})
+				local talisman
+				if exile.UpgradeItem then talisman = exile.UpgradeItem.ItemName else talisman = "nil" end
+				RiteClubReportItem({Key="TEAM"..tostring(i).."EXILE"..tostring(n).."TALISMAN", Value=talisman})
+			end
+		end
+
+		local t
+		if i == 1 then t = RiteClub.TeamA else t = RiteClub.TeamB end
+		RiteClubReportItem({Key="TEAM"..tostring(i).."TRIUMVIRATE", Value=t.Name})
+		RiteClubReportItem({Key="TEAM"..tostring(i).."STARTHP", Value=t.StartingPyreHealth})
+	end
+
 
 	if not uncommonMatch then
 		thread(MeteoriteSlam, ballId, nil, 0.2, true )
@@ -2478,6 +2502,17 @@
 	end
 	deadPlayer.LastDeathTime = _worldTime
 
+	--[[RITECLUB: Don't report a banishment when someone plunges into the pyre.
+	Only report "proper" banishments that happen on the field.]]
+	if deadPlayer ~= SacrificeScorer or deadPlayer.ImmuneToSacrifice then
+		RiteClubReportItem({Key="BANISHSTART"})
+		RiteClubReportItem({Key="BANISHER", Value=killingPlayer.CharacterIndex})
+		RiteClubReportItem({Key="BANISHERTEAM", Value=killingPlayer.TeamIndex})
+		RiteClubReportItem({Key="BANISHEE", Value=deadPlayer.CharacterIndex})
+		RiteClubReportItem({Key="BANISHEETEAM", Value=deadPlayer.TeamIndex})
+		RiteClubReportItem({Key="BANISHSTOP"})
+	end
+
 	-- tutorial nonsense
 	if fakeJumpPresentation then
 		DisableInput({ PlayerIndex = 1 })
@@ -4309,6 +4344,13 @@
 
 		scoringCharacter.PointsLastMatch = scoringCharacter.PointsLastMatch + roundScore
 		scoringCharacter.PointsAllTime = scoringCharacter.PointsAllTime + roundScore
+
+		RiteClubReportItem({Key="STARTSCORE"})
+		RiteClubReportItem({Key="SCORETEAM", Value=scoringCharacter.TeamIndex})
+		RiteClubReportItem({Key="SCORER", Value=scoringCharacter.CharacterIndex})
+		RiteClubReportItem({Key="SCOREVALUE", Value=roundScore})
+		RiteClubReportItem({Key="SCORETHROWN", Value=tostring(thrownScore)})
+		RiteClubReportItem({Key="STOPSCORE"})
 	end
 
 	scoredOnTeam.PrevPyreHealth = scoredOnTeam.PyreHealth
@@ -4580,6 +4622,7 @@
 
 	if not introMatch then
 		wait(1.3)
+		RiteClubFinalReport(TeamA, TeamB)
 		if TeamA.PyreHealth > TeamB.PyreHealth then
 			MatchConclusionPresentation( TeamA )
 		else
@@ -5061,6 +5104,7 @@
 	local scoringTeam = GetMatchTeamByCharacterId( scorerId )
 
 	if TeamA.PyreHealth <= 0 or TeamB.PyreHealth <= 0 then
+		RiteClubReportItem({Key="RITECONCLUDED"})
 		-- used for LocalMP Victory
 		local characterData = GetCharacterTableByObjectId( scorerId )
 		TagWinningScoreCharacter( characterData )
